from hedera import (
    AccountId,
    Client,
    PrivateKey,
    PublicKey,
    TopicMessageSubmitTransaction
)
import mysql.connector
from hedera import TopicId

# Configura los parámetros de conexión a la base de datos MySQL
db_config = {
    'user': 'root',
    'password': 'adminn1',
    'host': 'localhost',
    'database': 'conces_motos',
    'raise_on_warnings': True
}
# Configura la conexión a la red de Hedera
client = Client.forTestnet()  # Conexión a la red de prueba de Hedera
private_key = PrivateKey.fromString("302e020100300506032b6570042204209597d61b8b56b3630f3b71ae39a5f56c2665c16063190ea10a668bf98e8af275")
public_key = private_key.getPublicKey()
client.setOperator(AccountId.fromString("0.0.13702904"), private_key)

# Obtén los datos que deseas enviar a Hedera y guardar en MySQL
mensaje = "Hola tercer mensaje"
topic_id = TopicId.fromString("0.0.13703099")
datos = {"mensaje": mensaje}

try:
    # Crea la conexión a la base de datos MySQL
    db_connection = mysql.connector.connect(**db_config)
    
    # Verifica si la conexión se ha establecido correctamente
    if db_connection.is_connected():
        print("Conexión exitosa a la base de datos MySQL")

    # Resto del código para realizar operaciones en la base de datos
    # Envia el mensaje a Hedera
    transaction = TopicMessageSubmitTransaction() \
        .setTopicId(topic_id) \
        .setMessage(mensaje) \
        .execute(client) \
        .getReceipt(client)

    # Guarda los datos en MySQL
    cursor = db_connection.cursor()
    sql = "INSERT INTO hedera (mensaje) VALUES (%s)"
    values = (mensaje,)
    cursor.execute(sql, values)
    db_connection.commit()

    
except mysql.connector.Error as error:
    print("Error al conectar a la base de datos MySQL:", error)
finally:
    # Cierra la conexión a la base de datos
    if 'db_connection' in locals() and db_connection.is_connected():
        db_connection.close()
        print("Conexión cerrada a la base de datos MySQL")





C O N E X I O N
from hedera import (
    AccountId,
    Client,
    PrivateKey,
    TopicCreateTransaction,
    Hbar
)

# Configura la conexión a la red de Hedera
client = Client.forTestnet()  # Conexión a la red de prueba de Hedera
private_key = PrivateKey.fromString("302e020100300506032b6570042204209597d61b8b56b3630f3b71ae39a5f56c2665c16063190ea10a668bf98e8af275")
public_key = private_key.getPublicKey()
client.setOperator(AccountId.fromString("0.0.13702904"), private_key)

# Crea una transacción para crear un tema
topic_transaction = (
    TopicCreateTransaction()
    .setTopicMemo("Mi tema de prueba")  # Memo/descripción opcional del tema
    .setSubmitKey(public_key)  # Clave pública asociada al tema
    .setMaxTransactionFee(Hbar(100000))  # Tarifa máxima de la transacción en formato de tinybars (ajustar según tus necesidades)
)

# Ejecuta la transacción y obtén el ID de la transacción
transaction_id = topic_transaction.execute(client)

# Espera a que se complete la transacción
receipt = transaction_id.getReceipt(client)

# Obtener el ID de transacción
transaction_id_str = transaction_id.transactionId.toString()
print("ID de transacción:", transaction_id_str)

# Imprime el Topic ID del tema creado
topic_id = receipt.topicId
print("Topic ID:", topic_id.toString())



